name: Build Desktop Client - Windows

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'apps/poker-desktop/**'
      - '.github/workflows/build-desktop-windows.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'apps/poker-desktop/**'
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., 0.1.0)'
        required: false
        default: ''

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  build-windows:
    runs-on: windows-latest
    
    defaults:
      run:
        working-directory: ./apps/poker-desktop

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './apps/poker-desktop/src-tauri -> target'

      - name: Install dependencies
        run: |
          # Install from root to handle monorepo correctly
          cd ../..
          npm ci --legacy-peer-deps

      - name: Run tests
        run: npm run test:ci
        continue-on-error: true # Don't fail build if tests fail for now

      - name: Build Tauri app
        run: npm run tauri build

      - name: List build outputs
        if: always()
        run: |
          echo "=== Checking build outputs ==="
          ls -la src-tauri/target/release/bundle/nsis/ || echo "No NSIS bundle found"
          ls -la src-tauri/target/release/bundle/msi/ || echo "No MSI bundle found"
          ls -la src-tauri/target/release/*.exe || echo "No exe found in release"
          echo "=== Build check complete ==="

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            apps/poker-desktop/src-tauri/target/release/bundle/nsis/*.exe
            apps/poker-desktop/src-tauri/target/release/bundle/msi/*.msi
          retention-days: 30

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: apps/poker-desktop/src-tauri/target/release/*.exe
          retention-days: 30

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./installers

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(cat apps/poker-desktop/package.json | jq -r '.version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Find installer files
        id: find_files
        run: |
          NSIS_FILE=$(find ./installers -name "*.exe" -type f | head -1)
          echo "nsis_file=$NSIS_FILE" >> $GITHUB_OUTPUT
          echo "Found NSIS installer: $NSIS_FILE"

          if [ -f "$NSIS_FILE" ]; then
            NSIS_NAME="Primo-Poker_${{ steps.version.outputs.version }}_x64-setup.exe"
            echo "nsis_name=$NSIS_NAME" >> $GITHUB_OUTPUT
            echo "Will upload as: $NSIS_NAME"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: desktop-v${{ steps.version.outputs.version }}
          name: Primo Poker Desktop v${{ steps.version.outputs.version }}
          body: |
            ## Primo Poker Desktop v${{ steps.version.outputs.version }} - Early Access

            This is the first public release of the Primo Poker desktop client for Windows.

            ### Installation
            1. Download `Primo-Poker_${{ steps.version.outputs.version }}_x64-setup.exe` below
            2. Run the installer
            3. Windows SmartScreen may warn about unsigned application - click "More info" â†’ "Run anyway"
            4. Launch "Primo Poker" from Start Menu

            ### Test Credentials
            For immediate testing:
            - Username: `e2e_test_1754187899779`
            - Password: `TestPass123!_1754187899779`

            ### Known Issues
            - **Player Limit**: Games with 6+ players may experience button rotation issues. Please limit games to 2-5 players.
            - **Message Parsing**: Occasional WebSocket parsing errors may occur. Refresh the table if game state appears incorrect.
            - **Windows Only**: macOS and Linux builds coming in future releases.
            - **Unsigned Build**: Windows will show SmartScreen warnings. This is expected and safe to bypass.

            ### Documentation
            - [Installation Guide](https://github.com/AlabamaMike/primoPokerServerlessCF/blob/main/apps/poker-desktop/INSTALLATION.md)
            - [Quick Start Guide](https://github.com/AlabamaMike/primoPokerServerlessCF/blob/main/apps/poker-desktop/QUICK_START.md)
            - [Changelog](https://github.com/AlabamaMike/primoPokerServerlessCF/blob/main/apps/poker-desktop/CHANGELOG.md)

            ### Backend
            - Production API: https://primo-poker-server.alabamamike.workers.dev
            - Backend Status: https://primo-poker-server.alabamamike.workers.dev/api/health

            Please report issues at: https://github.com/AlabamaMike/primoPokerServerlessCF/issues
          draft: true
          prerelease: false
          files: |
            ${{ steps.find_files.outputs.nsis_file }}
          fail_on_unmatched_files: false