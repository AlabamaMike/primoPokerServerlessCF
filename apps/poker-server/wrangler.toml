name = "primo-poker-server"
main = "src/index.ts"
compatibility_date = "2024-01-17"
compatibility_flags = ["nodejs_compat"]

# Environment variables
[vars]
ENVIRONMENT = "production"
JWT_SECRET = "your-super-secret-jwt-key-for-development-only-change-in-production"
ALLOWED_ORIGINS = "https://localhost:3000,tauri://localhost"
MAX_AVATAR_SIZE = "5242880"  # 5MB in bytes
CDN_BASE_URL = "https://avatars.primo-poker.com"

# D1 Database
[[d1_databases]]
binding = "DB"
database_name = "primo-poker-db"
database_id = "c112bb87-1024-4bf1-b698-193913831358"
migrations_dir = "./migrations"

# KV Namespace for sessions
[[kv_namespaces]]
binding = "SESSION_STORE"
id = "6ef4c203e65f429082df51bbec8bb19e"
preview_id = "d7b0477a22d94639806c8533d46682a9"

# KV Namespace for metrics
[[kv_namespaces]]
binding = "METRICS_NAMESPACE"
id = "7ef4c203e65f429082df51bbec8bb19f"
preview_id = "e7b0477a22d94639806c8533d46682a8"

# R2 Bucket for hand history
[[r2_buckets]]
binding = "HAND_HISTORY_BUCKET"
bucket_name = "primo-poker-hand-history"
preview_bucket_name = "primo-poker-hand-history-preview"

# R2 Bucket for RNG audit logs
[[r2_buckets]]
binding = "AUDIT_BUCKET"
bucket_name = "primo-poker-rng-audit"
preview_bucket_name = "primo-poker-rng-audit-preview"

# R2 Bucket for player avatars
[[r2_buckets]]
binding = "AVATAR_BUCKET"
bucket_name = "primo-poker-avatars"
preview_bucket_name = "primo-poker-avatars-preview"

# Durable Objects
[[durable_objects.bindings]]
name = "TABLE_OBJECTS"
class_name = "TableDurableObject"
script_name = "primo-poker-server"

# New GameTable Durable Object for multiplayer games
[[durable_objects.bindings]]
name = "GAME_TABLES"
class_name = "GameTableDurableObject"
script_name = "primo-poker-server"

# Same DO with different binding name for permission checks
[[durable_objects.bindings]]
name = "GAME_TABLE_DO"
class_name = "GameTableDurableObject"
script_name = "primo-poker-server"

# Secure RNG Durable Object
[[durable_objects.bindings]]
name = "SECURE_RNG_DO"
class_name = "SecureRNGDurableObject"
script_name = "primo-poker-server"

# Rate Limiting Durable Object
[[durable_objects.bindings]]
name = "RATE_LIMIT_DO"
class_name = "RateLimitDurableObject"
script_name = "primo-poker-server"

# Profile Management Durable Object
[[durable_objects.bindings]]
name = "PROFILE_DO"
class_name = "ProfileDurableObject"
script_name = "primo-poker-server"

[[migrations]]
tag = "v1"
new_classes = ["TableDurableObject"]

[[migrations]]
tag = "v2"
new_classes = ["GameTableDurableObject"]

[[migrations]]
tag = "v3"
new_classes = ["SecureRNGDurableObject", "RateLimitDurableObject"]

[[migrations]]
tag = "v4"
new_classes = ["ProfileDurableObject"]

# Removed v5 migration - not needed
# Build configuration ensures dist/index.js is created

# Queue for tournament processing
[[queues.producers]]
queue = "tournament-queue"
binding = "TOURNAMENT_QUEUE"

[[queues.consumers]]
queue = "tournament-queue"
max_batch_size = 10
max_batch_timeout = 5
max_retries = 3
dead_letter_queue = "tournament-dlq"

# Analytics Engine for metrics
[[analytics_engine_datasets]]
binding = "ANALYTICS"
dataset = "primo-poker-metrics"

# Secrets (set via wrangler secret put)
# JWT_SECRET
# DATABASE_ENCRYPTION_KEY
# ANTHROPIC_API_KEY (for AI features)

# Cron triggers for scheduled jobs
[triggers]
crons = [
  "*/15 * * * *",     # Every 15 minutes - cleanup stale connections
  "0 */6 * * *",      # Every 6 hours - cleanup old hand history
  "0 2 * * *",        # Daily at 2 AM - daily maintenance
  "0 * * * *",        # Every hour - hourly statistics aggregation
  "0 3 * * *",        # Daily at 3 AM - daily statistics aggregation
  "0 4 * * 1",        # Weekly on Monday at 4 AM - weekly statistics aggregation
  "0 5 1 * *"         # Monthly on the 1st at 5 AM - monthly statistics aggregation
]

# Cache Rules
[[cache_rules]]
expression = "(http.request.uri.path matches \"^/api/health$\")"
ttl = 300  # 5 minutes
cache_control = "public, max-age=300"

[[cache_rules]]
expression = "(http.request.uri.path matches \"^/api/lobby/tables$\")"
ttl = 60  # 1 minute
cache_control = "public, max-age=60"

[[cache_rules]]
expression = "(http.request.uri.path matches \"^/api/tables$\" and http.request.method eq \"GET\")"
ttl = 60  # 1 minute
cache_control = "public, max-age=60"

[[cache_rules]]
expression = "(http.request.uri.path matches \"^/api/leaderboards\")"
ttl = 300  # 5 minutes
cache_control = "public, max-age=300"

[[cache_rules]]
expression = "(http.request.uri.path matches \"^/api/tournaments$\" and http.request.method eq \"GET\")"
ttl = 300  # 5 minutes
cache_control = "public, max-age=300"

# Static assets cache rules
[[cache_rules]]
expression = "(http.request.uri.path.extension in {\"js\" \"css\"})"
ttl = 3600  # 1 hour
cache_control = "public, max-age=3600"

[[cache_rules]]
expression = "(http.request.uri.path.extension in {\"png\" \"jpg\" \"jpeg\" \"svg\" \"webp\"})"
ttl = 604800  # 7 days
cache_control = "public, max-age=604800"

# Let wrangler handle the build with esbuild
